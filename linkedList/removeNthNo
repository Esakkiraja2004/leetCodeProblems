# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution(object):
    def removeNthFromEnd(self, head, n):
        """
        :type head: Optional[ListNode]
        :type n: int
        :rtype: Optional[ListNode]
        """
        if not head or not head.next:
            return None if n == 1 else head

        total_len = 0
        curr = head
        while curr:
            total_len += 1
            curr = curr.next
            
        rem_node = total_len - n

        if rem_node == 0:
            return head.next 

        curr = head
        for i in range(rem_node-1):
            curr = curr.next
        if curr.next:
            curr.next = curr.next.next
        else:
            curr.next = None
            
        return head